pipeline {
    agent any
    stages {
        stage('ST1-4595427U') {
            steps {
                echo 'ST1-4595427U: Setup Release Environment Completed.'
            }
        }
        stage('ST2-4595427U') {
            steps {
                script {
                    // Variable Declaration
                    def containerName = 'svr-4595427u'
                    def imageName = 'img-base-4595427u'
                    def hostPort = '32900'
                    def containerPort = '80'

                    // Check if there is already an existing container with the name svr-4595427u
                    // The following filters and formats to ensure we only get the name 'svr-4595427u'
                    def containerExists = sh (
                        script: "docker ps -a --filter name=svr-4595427u --format '{{.Names}}'",
                        returnStdout: true
                    ).trim()
                    // if statement to verify if container exists
                    // if it exists, remove the container forcefully
                    if (containerExists == containerName) {
                        echo "Remove existing container..."
                        sh "docker rm -f ${containerName}"
                    } else {
                        echo "No existing container named '${containerName}' found."
                    }

                    // Run the Docker container
                    // Ensure the container always restarts and ensure apache2 is running in the foreground to prevent docker from closing the container
                    echo "Starting new container '${containerName}' using image '${imageName}'."
                    sh """
                        docker run -d \
                            --restart always \
                            --name ${containerName} \
                            -p ${hostPort}:${containerPort} \
                            ${imageName} \
                            /bin/bash -c "apache2ctl -D FOREGROUND"
                    """
                }
            }
        }
        stage('ST3-Parallel-4595427U') {
            parallel {
                stage('ST3a-4595427U') {
                    steps {
                        echo 'Test 3a'
                    }
                }
                stage('ST3b-4595427U') {
                    steps {
                        echo 'Test 3b'
                    }
                }
            }
        }
        stage('ST4-4595427U') {
            steps {
                echo 'ST4-4595427U: Test'
            }
        }
        stage('ST5-4595427U') {
            steps {
                echo 'ST5-4595427U: Test'
            }
        }
        stage('ST6-4595427U') {
            steps {
                echo 'ST6-4595427U: Test'
            }
        }
    }
}
